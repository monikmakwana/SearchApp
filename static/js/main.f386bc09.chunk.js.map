{"version":3,"sources":["components/SearchBar.js","components/Picture.js","components/SearchList.js","containers/Search.js","App.js","index.js"],"names":["SearchBar","props","className","type","onChange","takeInput","placeholder","onClick","btClick","Picture","src","url","alt","SearchList","totalNumberOfRecords","imagedata","length","console","log","noRecordFoundJSX","successJSX","map","ele","images","original","Search","searchTxtValue","state","searchValue","fetch","then","response","json","result","data","setState","catch","err","event","target","value","this","giveMeTheData","title","name","bind","searchNow","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"sKACaA,EAAU,SAACC,GACpB,OAAQ,yBAAKC,UAAU,cACnB,6BACA,2BAAOC,KAAK,OAAOC,SAAUH,EAAMI,UAAWH,UAAU,eAAeI,YAAY,qBAEnF,4BAAQC,QAASN,EAAMO,QAASN,UAAU,mBAA1C,gBCJKO,G,KAAU,SAACR,GACpB,OACA,yBAAKC,UAAU,OACf,yBAAKQ,IAAKT,EAAMU,IAAKC,IAAI,wBCFhBC,EAAa,SAACZ,GACvB,IAAIa,EAAuBb,EAAMc,UAAUC,OAE3CC,QAAQC,IAAI,0BAA0BjB,EAAMc,WAC5C,IAAMI,EAAmB,8CACnBC,EACF,oCAEA,gDAAsBN,GACtB,yBAAKZ,UAAU,QACdD,EAAMc,UAAUM,KAAI,SAAAC,GAAG,OAAE,kBAAC,EAAD,CAASX,IAAKW,EAAIC,OAAOC,SAASb,WAOhE,OACI,6BAC6B,GAAxBV,EAAMc,UAAUC,OAAUG,EAAiBC,IClBnCK,E,kDACrB,WAAYxB,GAAO,IAAD,8BAEd,cAAMA,IAIDyB,eAAe,GACpB,EAAKC,MAAQ,CAACZ,UAAU,IAPV,E,uGAYJa,GAAa,IAAD,OAChBjB,EAAI,mFAAD,OAAoFiB,EAApF,aACOC,MAAMlB,GACdmB,MAAK,SAAAC,GACDA,EAASC,OACfF,MAAK,SAAAG,GACHhB,QAAQC,IAAI,WAAWe,EAAOC,MAC9B,EAAKC,SAAS,CAACpB,UAAUkB,EAAOC,UAEjCE,OAAM,SAAAC,GACLpB,QAAQC,IAAI,oBAEhBD,QAAQC,IAAI,yBACbkB,OAAM,SAAAC,GACLpB,QAAQC,IAAI,+BAA+BmB,Q,gCAKzCC,GACN,IAAIJ,EAAKI,EAAMC,OAAOC,MACtBC,KAAKf,eAAeQ,EACpBjB,QAAQC,IAAI,mBAAmBuB,KAAKf,kB,kCAGpCT,QAAQC,IAAI,0BACZuB,KAAKC,cAAcD,KAAKf,kB,+BAIxB,OADAT,QAAQC,IAAI,iBAAiBuB,KAAKd,MAAMZ,WAExC,6BACI,wBAAIb,UAAU,0BAA0BuC,KAAKxC,MAAM0C,MAAnD,OAAgEF,KAAKxC,MAAM2C,MAC3E,kBAAC,EAAD,CAAWvC,UAAWoC,KAAKpC,UAAUwC,KAAKJ,MAAOjC,QAASiC,KAAKK,UAAUD,KAAKJ,QAC9E,kBAAC,EAAD,CAAa1B,UAAW0B,KAAKd,MAAMZ,iB,GA/CPgC,IAAMC,WCAnC,SAASC,EAAIhD,GAClB,OACE,yBAAKC,UAAU,aACb,6BACA,kBAAC,EAAD,CAAQyC,MAAM,sBAIb,I,cCTPO,EAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f386bc09.chunk.js","sourcesContent":["import React from 'react';\r\nexport const SearchBar=(props)=>{\r\n    return (<div className='form-group'>\r\n        <br></br>\r\n        <input type='text' onChange={props.takeInput} className='form-control' placeholder='Search Any Image'/>\r\n         \r\n        <button onClick={props.btClick} className='btn btn-primary'>Search Now</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport '../App.css';\r\nexport const Picture = (props)=>{\r\n    return (\r\n    <div className=\"gif\">\r\n    <img src={props.url} alt=\"Image is Missing\"/>\r\n    </div>\r\n    )\r\n};","import React from 'react';\r\nimport '../App.css';\r\nimport { Picture } from './Picture';\r\nexport const SearchList = (props)=>{\r\n    let totalNumberOfRecords = props.imagedata.length;\r\n\r\n    console.log('Props Received in List ',props.imagedata);\r\n    const noRecordFoundJSX = <p>No Record Found</p>;\r\n    const successJSX=(\r\n        <>\r\n        \r\n        <p>List of Records : {totalNumberOfRecords}</p>\r\n        <div className=\"gifs\">\r\n        {props.imagedata.map(ele=><Picture url={ele.images.original.url} />)}\r\n\r\n        {/* {props.imagedata.map(ele=><img src={ele.images.original.url} />)} */}\r\n        \r\n        </div>\r\n        </>\r\n    );\r\n    return (\r\n        <div>\r\n            {props.imagedata.length==0?noRecordFoundJSX:successJSX}\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport { SearchList } from '../components/SearchList';\r\n\r\nexport default class Search extends React.Component{\r\nconstructor(props){\r\n    //init Props and States\r\n    super(props); //calling a parent constructor\r\n    //initialize the props from the parent and give it to\r\n    // props = {} // It is an Empty Object\r\n    // props.title = \"Image Search App\"\r\n    this.searchTxtValue='';\r\n    this.state = {imagedata:[]};\r\n}\r\ncomponentDidMount(){\r\n    //this.giveMeTheData();\r\n}\r\ngiveMeTheData(searchValue){\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=vFRSFWo6g7vJ7ZAjt3DMDolU52ORTxwH&q=${searchValue}&limit=10`;\r\n    const promise = fetch(url);\r\n    promise.then(response=>{\r\n        var p = response.json();\r\n        p.then(result=>{\r\n            console.log('Data is ',result.data);\r\n            this.setState({imagedata:result.data});\r\n           \r\n        }).catch(err=>{\r\n            console.log('Error in Json');\r\n        })\r\n        console.log('Response is Coming');\r\n    }).catch(err=>{\r\n        console.log('Error Coming From the Server',err);\r\n\r\n    })\r\n\r\n}\r\ntakeInput(event){\r\n    let data=event.target.value;\r\n    this.searchTxtValue=data;\r\n    console.log('Calling by Child',this.searchTxtValue);\r\n}\r\nsearchNow(){\r\n    console.log('Search Button is Click');\r\n    this.giveMeTheData(this.searchTxtValue);\r\n}\r\nrender(){\r\n    console.log('Image Data is ',this.state.imagedata);\r\n    return(\r\n    <div>\r\n        <h1 className=\"alert-info text-center\">{this.props.title}&nbsp;{this.props.name}</h1>      \r\n        <SearchBar takeInput={this.takeInput.bind(this)} btClick={this.searchNow.bind(this)} />\r\n        <SearchList  imagedata={this.state.imagedata}/>\r\n    </div>  \r\n    ) \r\n}\r\n\r\n}\r\n/* Dumb and Old\r\nfunction Search(){\r\n    return (<div>\r\n        <h1 className=\"alert-info text-center\">Search Engine App</h1>\r\n    </div>)\r\n}\r\nexport default Search;\r\n*/","// App is a Component\n// Top Level Component\nimport React from 'react';\nimport Search from './containers/Search';\nexport function App(props){\n  return (\n    <div className=\"container\">\n      <br></br>\n      <Search title='Image Search App'/>\n     </div>\n  )\n}\nexport const x=100;","import {App} from './App';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}